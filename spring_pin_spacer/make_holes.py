#!/usr/bin/env python3
"""script that puts holes into pcb"""
import pcbnew


class HoleMaker(object):
    """puts holes into a pcb, units are mm"""

    board_filename = None
    pcb = None

    def __init__(self, board_filename):
        """load pcb"""
        self.board_filename = board_filename
        self.pcb = pcbnew.LoadBoard(self.board_filename)

    def npth(self, diameter, x, y):
        """put a npth in pcb with given diameter and location"""
        module = pcbnew.FOOTPRINT(self.pcb)
        npth = pcbnew.PAD(module)
        npth.SetAttribute(pcbnew.PAD_ATTRIB_NPTH)
        npth.SetShape(pcbnew.PAD_SHAPE_CIRCLE)
        npth.SetSize(pcbnew.wxSizeMM(diameter, diameter))
        npth.SetDrillShape(pcbnew.PAD_DRILL_SHAPE_CIRCLE)
        npth.SetDrillSize(pcbnew.wxSizeMM(diameter, diameter))
        module.Add(npth)
        self.pcb.Add(module)
        loc = pcbnew.wxPointMM(x, y)
        module.SetPosition(loc)

    def make_holes(self):
        """make the holes"""
        # vals here generated by ng_vhamber build.py
        d_vals=[5.5, 5.5, 3.15, 3.15, 3.15, 3.15, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 5.5, 5.5, 3.15, 3.15, 3.15, 3.15, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 5.5, 5.5, 3.15, 3.15, 3.15, 3.15, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 6, 6, 6, 6, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 3.15, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0]
        x_vals=[0.0, 0.0, -6.0, 6.0, -6.0, 6.0, -13.2, -13.2, -13.2, -13.2, -13.2, -13.2, 13.2, 13.2, 13.2, 13.2, 13.2, 13.2, -13.2, -13.2, -13.2, -13.2, -13.2, -13.2, 13.2, 13.2, 13.2, 13.2, 13.2, 13.2, 0.0, 0.0, -6.0, 6.0, -6.0, 6.0, -13.2, -13.2, -13.2, -13.2, -13.2, -13.2, 13.2, 13.2, 13.2, 13.2, 13.2, 13.2, -13.2, -13.2, -13.2, -13.2, -13.2, -13.2, 13.2, 13.2, 13.2, 13.2, 13.2, 13.2, -16.0, -14.0, -16.0, -14.0, 16.0, -16.0, 14.0, 16.0, 14.0, -16.0, -14.0, -16.0, -14.0, 14.0, -14.0, 14.0, 16.0, 14.0, 16.0, -16.0, 16.0, -16.0, -14.0, 14.0, 16.0, 14.0, 16.0, -14.0, 14.0, -14.0, -16.0, -14.0, 14.0, 16.0, 14.0, -16.0, 16.0, -16.0, 16.0, -16.0, -14.0, 14.0, -14.0, 14.0, -14.0, 16.0, -16.0, 16.0, -16.0, 16.0, -16.0, 14.0, 16.0, 14.0, -14.0, 14.0, -14.0, 14.0, -14.0, 16.0, -16.0, 16.0, -16.0, 16.0, -16.0, 14.0, -14.0, -14.0, 14.0, -14.0, 14.0, -14.0, -16.0, 16.0, -14.0, -16.0, -16.0, 16.0, -16.0, 16.0, -16.0, 14.0, -14.0, -14.0, 14.0, -14.0, 14.0, -14.0, 16.0, 16.0, -16.0, 16.0, -16.0, -16.0, 16.0, -16.0, -14.0, 14.0, 16.0, 14.0, 14.0, -14.0, -14.0, 14.0, -14.0, -16.0, -14.0, 14.0, 16.0, -16.0, 16.0, 16.0, -16.0, -16.0, 16.0, -16.0, -14.0, 14.0, 14.0, -14.0, 14.0, 14.0, -14.0, 16.0, -16.0, -14.0, 16.0, -16.0, 16.0, 16.0, -16.0, 14.0, 16.0, 14.0, -14.0, 14.0, -14.0, 14.0, 14.0, -14.0, 16.0, -16.0, 16.0, -16.0, 16.0, -16.0, 14.0, -14.0, 14.0, -14.0, 14.0, -14.0, -16.0, 16.0, -14.0, -16.0, 16.0, -16.0, 16.0, -16.0, 14.0, -14.0, 14.0, -14.0, 14.0, 16.0, -16.0, 16.0, -16.0, 16.0, -14.0, 14.0, 16.0, 14.0, -14.0, 14.0, -16.0, -14.0, -16.0, 14.0, 16.0, -16.0, 16.0, -16.0, -14.0, -16.0, -14.0, 14.0, 14.0, -14.0, 16.0, 16.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, -12.0, -12.0, 12.0, 12.0, 0.0, 0.0, -6.0, 6.0, -6.0, 6.0, -13.2, -13.2, -13.2, -13.2, -13.2, -13.2, 13.2, 13.2, 13.2, 13.2, 13.2, 13.2, -13.2, -13.2, -13.2, -13.2, -13.2, -13.2, 13.2, 13.2, 13.2, 13.2, 13.2, 13.2, -15.0, -15.0, -15.0, -15.0, -16.5, -16.5, -16.5, -16.5, -16.5, -16.5, -16.5, -16.5, -9.0, -9.0, -9.0, -9.0, 9.0, 9.0, 9.0, 9.0, 0.0, 0.0, 0.0, 0.0, 18.5, 18.5, 18.5, 18.5, -14.723446250469229, -14.723446250469229, -14.723446250469229, -14.723446250469229, -14.723446250469229, -14.723446250469229, -14.723446250469229, -14.723446250469229, 15.3912427893639, 15.3912427893639, 15.3912427893639, 15.3912427893639, 15.3912427893639, 15.3912427893639, 15.3912427893639, 15.3912427893639]
        y_vals=[-86.0, 86.0, -86.0, -86.0, 86.0, 86.0, -91.0, -89.0, -87.0, -85.0, -83.0, -81.0, -91.0, -89.0, -87.0, -85.0, -83.0, -81.0, 81.0, 83.0, 85.0, 87.0, 89.0, 91.0, 81.0, 83.0, 85.0, 87.0, 89.0, 91.0, -86.0, 86.0, -86.0, -86.0, 86.0, 86.0, -91.0, -89.0, -87.0, -85.0, -83.0, -81.0, -91.0, -89.0, -87.0, -85.0, -83.0, -81.0, 81.0, 83.0, 85.0, 87.0, 89.0, 91.0, 81.0, 83.0, 85.0, 87.0, 89.0, 91.0, -49.0, -15.0, 15.0, 49.0, 29.0, -31.0, -51.0, -17.0, 13.0, -13.0, -49.0, 51.0, 15.0, 31.0, -31.0, -15.0, -51.0, 49.0, 13.0, 17.0, 31.0, -29.0, -65.0, -49.0, -15.0, 15.0, 49.0, 63.0, -31.0, 17.0, -63.0, -29.0, -13.0, -49.0, 51.0, 65.0, 15.0, 19.0, -31.0, -27.0, -63.0, 17.0, 65.0, -29.0, 19.0, -65.0, -61.0, 63.0, 67.0, 17.0, 21.0, -63.0, -29.0, 65.0, -61.0, 19.0, 67.0, -27.0, 21.0, -63.0, -59.0, 65.0, 69.0, 19.0, 23.0, -61.0, -13.0, 51.0, 67.0, -59.0, 21.0, 69.0, -11.0, -61.0, 23.0, 53.0, -57.0, 67.0, 71.0, 21.0, 25.0, -59.0, -11.0, 53.0, 69.0, -57.0, 23.0, 71.0, -13.0, 51.0, -9.0, -59.0, 55.0, -55.0, 69.0, 9.0, -27.0, -11.0, 23.0, 53.0, -57.0, -9.0, 55.0, 71.0, -55.0, -25.0, 9.0, 25.0, -11.0, -71.0, 53.0, -57.0, 57.0, -53.0, 71.0, 11.0, -25.0, -9.0, 55.0, -71.0, -55.0, 9.0, 57.0, -27.0, -23.0, 11.0, -9.0, -69.0, 55.0, -55.0, 59.0, -25.0, 9.0, -71.0, -23.0, 57.0, -69.0, -53.0, 11.0, 59.0, -25.0, -21.0, -71.0, -67.0, 57.0, 61.0, -23.0, 25.0, -69.0, -21.0, 59.0, -67.0, 27.0, -23.0, 61.0, -19.0, -69.0, -65.0, 59.0, 63.0, -21.0, 27.0, -67.0, -19.0, 61.0, 25.0, 29.0, -21.0, -17.0, -67.0, -53.0, 27.0, 61.0, -19.0, 29.0, -65.0, -51.0, -17.0, 13.0, 63.0, 27.0, 31.0, -19.0, -15.0, -51.0, 49.0, 13.0, 29.0, -17.0, 31.0, -53.0, 11.0, -51.09, -48.59, -51.09, -48.59, -56.17, -53.67, -56.17, -53.67, -61.25, -58.75, -61.25, -58.75, -66.33, -63.83, -66.33, -63.83, -71.41, -68.91, -71.41, -68.91, -11.09, -8.59, -11.09, -8.59, -16.17, -13.67, -16.17, -13.67, -21.25, -18.75, -21.25, -18.75, -26.33, -23.83, -26.33, -23.83, -31.41, -28.91, -31.41, -28.91, 28.91, 31.41, 28.91, 31.41, 23.83, 26.33, 23.83, 26.33, 18.75, 21.25, 18.75, 21.25, 13.67, 16.17, 13.67, 16.17, 8.59, 11.09, 8.59, 11.09, 68.91, 71.41, 68.91, 71.41, 63.83, 66.33, 63.83, 66.33, 58.75, 61.25, 58.75, 61.25, 53.67, 56.17, 53.67, 56.17, 48.59, 51.09, 48.59, 51.09, -86.0, 86.0, -86.0, -86.0, 86.0, 86.0, -91.0, -89.0, -87.0, -85.0, -83.0, -81.0, -91.0, -89.0, -87.0, -85.0, -83.0, -81.0, 81.0, 83.0, 85.0, 87.0, 89.0, 91.0, 81.0, 83.0, 85.0, 87.0, 89.0, 91.0, -75.0, -35.0, 5.0, 45.0, -51.0, -11.0, 29.0, 69.0, -69.0, -29.0, 11.0, 51.0, -76.5, -36.5, 3.5, 43.5, -76.5, -36.5, 3.5, 43.5, -41.5, -1.5, 38.5, 78.5, -60.0, -20.0, 20.0, 60.0, -74.72344625046922, -34.72344625046923, 5.276553749530772, 45.27655374953077, -44.6087572106361, -4.6087572106361, 35.3912427893639, 75.3912427893639, -74.72344625046922, -34.72344625046923, 5.276553749530772, 45.27655374953077, -44.6087572106361, -4.6087572106361, 35.3912427893639, 75.3912427893639]
        for d, x, y in zip(d_vals, x_vals, y_vals):
            self.npth(d, x, -y)
        print("Holes made!")


if __name__ == "__main__":
    board_filename = "spring_pin_spacer.kicad_pcb"
    hm = HoleMaker(board_filename)
    hm.make_holes()
    hm.pcb.Save(f"HOLEMOD_{board_filename}")
